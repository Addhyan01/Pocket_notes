{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\addhy\\\\Desktop\\\\practice\\\\pocketNotes\\\\note_taking_app\\\\src\\\\Components\\\\LeftSidePannel\\\\LeftSidePannel.jsx\",\n  _s = $RefreshSig$();\nimport NotesGroup from \"../NotesGroup/NotesGroup\";\nimport StylesLeftSidePannel from \"./LeftSidePannel.module.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LeftSidePannel = ({\n  handleClick,\n  handleUserIdClicked,\n  id,\n  groupName,\n  color,\n  create\n}) => {\n  _s();\n  const [clickedButton, setClickedButton] = useState(null);\n\n  // Getting stored data\n  const storedDataString = localStorage.getItem(\"groupNamesData\");\n  const storedData = JSON.parse(storedDataString) || [];\n  // changing id\n  const newId = storedData.length > 0 ? storedData[storedData.length - 1].id + 1 : 1;\n\n  // Create a new data object\n  const newData = {\n    id: newId,\n    groupName: groupName,\n    color: color,\n    create: create\n  };\n\n  // Append the new data to the existing array\n\n  const submitCheck = () => {\n    if (groupName !== \"\" && create === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n  useEffect(() => {\n    if (submitCheck()) {\n      storedData.push(newData);\n      localStorage.setItem(\"groupNamesData\", JSON.stringify(storedData));\n    }\n  }, [groupName, create, newData]);\n  const handleButtonClick = buttonId => {\n    setClickedButton(buttonId);\n  };\n  const buttonStyle = buttonId => {\n    return {\n      backgroundColor: clickedButton === buttonId ? \"#F7ECDC\" : \"transparent\",\n      color: \"white\",\n      minWidth: \"100%\",\n      minHeight: \"61px\",\n      // border: \"1px solid black\",\n      display: \"flex\",\n      justifyContent: \"flex-start\",\n      borderRadius: \"2rem 0rem 0rem 2rem\"\n      // width: \"31vw\",\n      // padding: \"4% 0.9% 4% 5%\",\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: StylesLeftSidePannel.leftSidePannel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Pocket Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: StylesLeftSidePannel.center,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: StylesLeftSidePannel.createNotesGroup,\n          onClick: () => handleClick(true),\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"img\", {\n            src: \"assets/+.svg\",\n            alt: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: \"flex\",\n              flexDirection: \"column-reverse\"\n            },\n            children: storedData.map(group => group.create ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: StylesLeftSidePannel.notesGroupSlected,\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: StylesLeftSidePannel.act,\n                style: buttonStyle(group.id),\n                onClick: _ => {\n                  handleUserIdClicked(group.id);\n                  handleButtonClick(group.id);\n                },\n                children: /*#__PURE__*/_jsxDEV(NotesGroup, {\n                  groupName: group.groupName,\n                  color: group.color,\n                  buttonColorId: group.id\n                }, group.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this) : null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(LeftSidePannel, \"GqVq83JpH3XMeV4yQ4eK5mfJH7M=\");\n_c = LeftSidePannel;\nexport default LeftSidePannel;\nvar _c;\n$RefreshReg$(_c, \"LeftSidePannel\");","map":{"version":3,"names":["NotesGroup","StylesLeftSidePannel","React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","LeftSidePannel","handleClick","handleUserIdClicked","id","groupName","color","create","_s","clickedButton","setClickedButton","storedDataString","localStorage","getItem","storedData","JSON","parse","newId","length","newData","submitCheck","push","setItem","stringify","handleButtonClick","buttonId","buttonStyle","backgroundColor","minWidth","minHeight","display","justifyContent","borderRadius","children","className","leftSidePannel","fileName","_jsxFileName","lineNumber","columnNumber","center","createNotesGroup","onClick","src","alt","style","flexDirection","map","group","notesGroupSlected","act","_","buttonColorId","_c","$RefreshReg$"],"sources":["C:/Users/addhy/Desktop/practice/pocketNotes/note_taking_app/src/Components/LeftSidePannel/LeftSidePannel.jsx"],"sourcesContent":["import NotesGroup from \"../NotesGroup/NotesGroup\";\r\nimport StylesLeftSidePannel from \"./LeftSidePannel.module.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\nconst LeftSidePannel = ({ handleClick,handleUserIdClicked, id, groupName, color, create }) => {\r\n  const [clickedButton, setClickedButton] = useState(null);\r\n  \r\n\r\n  // Getting stored data\r\n  const storedDataString = localStorage.getItem(\"groupNamesData\");\r\n  const storedData = JSON.parse(storedDataString) || [];\r\n  // changing id\r\n  const newId =\r\n    storedData.length > 0 ? storedData[storedData.length - 1].id + 1 : 1;\r\n\r\n  // Create a new data object\r\n  const newData = {\r\n    id: newId,\r\n    groupName: groupName,\r\n    color: color,\r\n    create: create,\r\n  };\r\n  \r\n  // Append the new data to the existing array\r\n\r\n  const submitCheck = () => {\r\n    if (groupName !== \"\" && create === true) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (submitCheck()) {\r\n      storedData.push(newData);\r\n      localStorage.setItem(\"groupNamesData\", JSON.stringify(storedData));\r\n    }\r\n  }, [groupName, create, newData]);\r\n\r\n\r\n  const handleButtonClick = (buttonId) => {\r\n    setClickedButton(buttonId);\r\n  };\r\n\r\n  const buttonStyle = (buttonId) => {\r\n    return {\r\n      backgroundColor: clickedButton === buttonId ? \"#F7ECDC\" : \"transparent\",\r\n      color: \"white\",\r\n      minWidth: \"100%\",\r\n      minHeight: \"61px\",\r\n      // border: \"1px solid black\",\r\n      display: \"flex\",\r\n      justifyContent: \"flex-start\",\r\n      borderRadius: \"2rem 0rem 0rem 2rem\",\r\n      // width: \"31vw\",\r\n      // padding: \"4% 0.9% 4% 5%\",\r\n    };\r\n  };\r\n\r\n  return (\r\n\r\n    <>\r\n   \r\n    <div className={StylesLeftSidePannel.leftSidePannel}>\r\n      <div className=\"\"></div>\r\n    <h1>Pocket Notes</h1>\r\n      <div className={StylesLeftSidePannel.center}>\r\n        <button\r\n          className={StylesLeftSidePannel.createNotesGroup}\r\n          onClick={() => handleClick(true)}\r\n        >\r\n          {\" \"}\r\n          <img src=\"assets/+.svg\" alt=\"+\"  /> \r\n        </button>\r\n        <div>\r\n          <br />\r\n          <div\r\n            style={{\r\n              display: \"flex\",\r\n              flexDirection: \"column-reverse\",\r\n            }}\r\n          >\r\n            {storedData.map((group) =>\r\n              group.create ? (\r\n                <div className={StylesLeftSidePannel.notesGroupSlected}>\r\n                  \r\n                  <span\r\n                    className={StylesLeftSidePannel.act}\r\n                    style={buttonStyle(group.id)}\r\n                    onClick={(_) => {\r\n                      handleUserIdClicked(group.id);\r\n                      handleButtonClick(group.id);\r\n                    }}\r\n                  >\r\n                    <NotesGroup\r\n                      key={group.id}\r\n                      groupName={group.groupName}\r\n                      color={group.color}\r\n                      buttonColorId={group.id}\r\n                    />\r\n                  </span>\r\n                </div>\r\n              ) : null\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LeftSidePannel;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}